{"ast":null,"code":"var _jsxFileName = \"/Users/bagseung-won/Desktop/WorkSpace/CodingStudy/codingNuna/React/fourth-react-project/src/page/ProductAll.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ProductCard from \"../component/ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductAll = () => {\n  _s();\n  const [productList, setProductList] = useState([]);\n  const [query, setQuery] = useSearchParams();\n  const getProducts = async () => {\n    try {\n      var _query$get;\n      const searchQuery = (_query$get = query.get('q')) !== null && _query$get !== void 0 ? _query$get : '';\n      const PORT_NUM = '4000';\n      const url = `http://localhost:${PORT_NUM}/products?q=${searchQuery}`;\n      console.log(url);\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(res.statusText);\n      const data = await res.json();\n      // 서버측 쿼리문 미작동으로 프론트 단에서 쿼리 기능 구현\n      const filteredData = searchQuery ? data.filter(item => item.title.includes(searchQuery)) : data;\n      console.log(filteredData);\n      if (filteredData.length === 0) {\n        alert('검색결과가 없습니다.');\n        return;\n      }\n      setProductList(filteredData);\n    } catch (err) {\n      console.error(\"Error: \", err);\n    }\n  };\n  useEffect(() => {\n    getProducts();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: productList.map(item => /*#__PURE__*/_jsxDEV(ProductCard, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductAll, \"eHW8yH0RqONaEohLVTmT5XNtZNA=\", false, function () {\n  return [useSearchParams];\n});\n_c = ProductAll;\nexport default ProductAll;\nvar _c;\n$RefreshReg$(_c, \"ProductAll\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","ProductCard","jsxDEV","_jsxDEV","ProductAll","_s","productList","setProductList","query","setQuery","getProducts","_query$get","searchQuery","get","PORT_NUM","url","console","log","res","fetch","ok","Error","statusText","data","json","filteredData","filter","item","title","includes","length","alert","err","error","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bagseung-won/Desktop/WorkSpace/CodingStudy/codingNuna/React/fourth-react-project/src/page/ProductAll.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ProductCard from \"../component/ProductCard\";\n\nconst ProductAll = () => {\n  const [productList, setProductList] = useState([]);\n  const [query, setQuery] = useSearchParams();\n\n  const getProducts = async () => {\n    try {\n      const searchQuery = query.get('q') ?? '';\n      const PORT_NUM = '4000';\n      const url = `http://localhost:${PORT_NUM}/products?q=${searchQuery}`;\n      console.log(url);\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(res.statusText);\n      const data = await res.json();\n      // 서버측 쿼리문 미작동으로 프론트 단에서 쿼리 기능 구현\n      const filteredData = searchQuery ? data.filter(item => item.title.includes(searchQuery)) : data;\n      console.log(filteredData);\n      if (filteredData.length === 0) {\n        alert('검색결과가 없습니다.');\n        return;\n      }\n      setProductList(filteredData);\n    } catch (err) {\n      console.error(\"Error: \", err);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, [query]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-wrapper\">\n        {productList.map((item) => (\n          <ProductCard item={item}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductAll;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGT,eAAe,CAAC,CAAC;EAE3C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MAAA,IAAAC,UAAA;MACF,MAAMC,WAAW,IAAAD,UAAA,GAAGH,KAAK,CAACK,GAAG,CAAC,GAAG,CAAC,cAAAF,UAAA,cAAAA,UAAA,GAAI,EAAE;MACxC,MAAMG,QAAQ,GAAG,MAAM;MACvB,MAAMC,GAAG,GAAG,oBAAoBD,QAAQ,eAAeF,WAAW,EAAE;MACpEI,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MAC5B,IAAI,CAACG,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7B;MACA,MAAMC,YAAY,GAAGb,WAAW,GAAGW,IAAI,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACjB,WAAW,CAAC,CAAC,GAAGW,IAAI;MAC/FP,OAAO,CAACC,GAAG,CAACQ,YAAY,CAAC;MACzB,IAAIA,YAAY,CAACK,MAAM,KAAK,CAAC,EAAE;QAC7BC,KAAK,CAAC,aAAa,CAAC;QACpB;MACF;MACAxB,cAAc,CAACkB,YAAY,CAAC;IAC9B,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZhB,OAAO,CAACiB,KAAK,CAAC,SAAS,EAAED,GAAG,CAAC;IAC/B;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BhC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B7B,WAAW,CAAC8B,GAAG,CAAET,IAAI,iBACpBxB,OAAA,CAACF,WAAW;QAAC0B,IAAI,EAAEA;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CAvCID,UAAU;EAAA,QAEYJ,eAAe;AAAA;AAAAyC,EAAA,GAFrCrC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}